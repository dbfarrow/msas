{
  "swagger": "2.0",
  "info": {
    "title": "Cookie API",
    "version": "1.2",
    "contact": {
      "name": "Cookie Support Team",
      "url": "https://cookie.ai",
      "email": "support@cookie.ai"
    },
    "license": {}
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/preview/providers/custom": {
      "get": {
        "summary": "Deprecated",
        "operationId": "ProviderService_ListCustomProvidersDeprecated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCustomProvidersDeprecatedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "summary": "Deprecated",
        "operationId": "ProviderService_CreateCustomProviderDeprecated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCustomProviderDeprecatedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCustomProviderDeprecatedRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/preview/providers/custom/templates": {
      "get": {
        "summary": "Deprecated",
        "operationId": "ProviderService_ListCustomProviderTemplatesDeprecated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCustomProviderTemplatesDeprecatedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/preview/providers/custom/{id}": {
      "get": {
        "summary": "Deprecated",
        "operationId": "ProviderService_GetCustomProviderDeprecated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCustomProviderDeprecatedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "summary": "Deprecated",
        "operationId": "ProviderService_DeleteCustomProviderDeprecated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteCustomProviderDeprecatedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/preview/providers/custom/{id}/datasources": {
      "get": {
        "summary": "Deprecated",
        "operationId": "ProviderService_ListCustomProvidersDataSourcesDeprecated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCustomProvidersDataSourcesDeprecatedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "summary": "Deprecated",
        "operationId": "ProviderService_CreateCustomProvidersDataSourceDeprecated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCustomProvidersDataSourceDeprecatedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCustomProvidersDataSourceDeprecatedRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/preview/providers/custom/{id}/datasources/{data_source_id}": {
      "delete": {
        "summary": "Deprecated",
        "operationId": "ProviderService_DeleteCustomProviderDatasourceDeprecated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteCustomProviderDatasourceDeprecatedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data_source_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/preview/providers/custom/{id}/datasources/{data_source_id}:push": {
      "post": {
        "summary": "Deprecated",
        "operationId": "ProviderService_PushCustomProviderDatasourceDeprecated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PushCustomProviderDatasourceDeprecatedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data_source_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PushCustomProviderDatasourceDeprecatedRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/preview/providers/custom:pushkey": {
      "post": {
        "summary": "Deprecated",
        "operationId": "ProviderService_CreateCustomProviderPushKeyDeprecated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCustomProviderPushKeyDeprecatedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCustomProviderPushKeyDeprecatedRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/preview/providers/datasources": {
      "get": {
        "operationId": "ProviderService_ListDataSourcesDeprecated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDataSourcesDeprecatedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "datasource_type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/preview/providers/datasources/{id}": {
      "get": {
        "operationId": "ProviderService_GetDataSourceDeprecated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDataSourceDeprecatedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/private/assessments/alerts": {
      "get": {
        "operationId": "AssessmentRuleService_ListAssessmentAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAssessmentAlertsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "AssessmentRuleService"
        ]
      }
    },
    "/api/private/assessments/alerts/{id}": {
      "get": {
        "operationId": "AssessmentRuleService_GetAssessmentAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAssessmentAlertResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      }
    },
    "/api/private/assessments/alerts/{id}:ack": {
      "post": {
        "operationId": "AssessmentRuleService_AcknowledgeAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AcknowledgeAlertResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AcknowledgeAlertRequest"
            }
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      }
    },
    "/api/private/assessments/queries": {
      "get": {
        "operationId": "AssessmentQueryService_ListAssessmentQueries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAssessmentQueriesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "include_inactive_queries",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "violations_only",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      },
      "post": {
        "operationId": "AssessmentQueryService_CreateAssessmentQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAssessmentQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAssessmentQueryRequest"
            }
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/queries/{id}": {
      "get": {
        "operationId": "AssessmentQueryService_GetAssessmentQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAssessmentQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      },
      "delete": {
        "operationId": "AssessmentQueryService_DeleteAssessmentQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAssessmentQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      },
      "put": {
        "operationId": "AssessmentQueryService_UpdateAssessmentQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAssessmentQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAssessmentQueryRequest"
            }
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/queries/{id}/destination_nodes": {
      "get": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
        "operationId": "AssessmentQueryService_GetAssessmentQueryDestinationNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExecuteAssessmentQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "source_node_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "snapshot_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/queries/{id}/timeseries": {
      "get": {
        "operationId": "AssessmentQueryService_GetTimeSeries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTimeSeriesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/queries/{id}/timeseries:comparison": {
      "get": {
        "operationId": "AssessmentQueryService_GetComparison",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetComparisonResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "snapshot_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/queries/{id}/variables": {
      "get": {
        "operationId": "AssessmentQueryService_ListQueryVariables",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListQueryVariablesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/queries/{id}:clone": {
      "post": {
        "operationId": "AssessmentQueryService_CloneQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CloneQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CloneQueryRequest"
            }
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/queries/{id}:customized_execute": {
      "post": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
        "operationId": "AssessmentQueryService_ExecuteAssessmentCustomizedQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExecuteAssessmentQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExecuteAssessmentCustomizedQueryRequest"
            }
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/queries/{id}:execute": {
      "get": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE",
        "operationId": "AssessmentQueryService_ExecuteAssessmentQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExecuteAssessmentQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include_nodes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "snapshot_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/queries/{id}:get_node_details": {
      "post": {
        "operationId": "AssessmentQueryService_GetAssessmentQueryNodeDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAssessmentQueryNodeDetailsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAssessmentQueryNodeDetailsRequest"
            }
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/queries/{id}:set_violation": {
      "put": {
        "operationId": "AssessmentQueryService_SetViolationAssessmentQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SetViolationAssessmentQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/queries/{id}:snapshot_diff": {
      "get": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE",
        "operationId": "AssessmentQueryService_AssessmentQuerySnapshotDiff",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AssessmentQuerySnapshotDiffResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include_nodes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "snapshot_a_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "snapshot_b_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/queries/{id}:unset_violation": {
      "put": {
        "operationId": "AssessmentQueryService_UnsetViolationAssessmentQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UnsetViolationAssessmentQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/query_spec:destination_nodes": {
      "post": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
        "operationId": "AssessmentQueryService_GetAssessmentQuerySpecDestinationNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExecuteAssessmentQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAssessmentQuerySpecDestinationNodesRequest"
            }
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/query_spec:execute": {
      "post": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
        "operationId": "AssessmentQueryService_ExecuteAssessmentQuerySpec",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExecuteAssessmentQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExecuteAssessmentQuerySpecRequest"
            }
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/query_spec:snapshot_diff": {
      "post": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
        "operationId": "AssessmentQueryService_AssessmentQuerySpecSnapshotDiff",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AssessmentQuerySnapshotDiffResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AssessmentQuerySpecSnapshotDiffRequest"
            }
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/queryrules": {
      "post": {
        "operationId": "AssessmentRuleService_CreateAssessmentQueryRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAssessmentQueryRuleResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAssessmentQueryRuleRequest"
            }
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      }
    },
    "/api/private/assessments/reports": {
      "get": {
        "summary": "List reports",
        "operationId": "AssessmentReportsService_ListAssessmentReports",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAssessmentReportsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_inactive_reports",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AssessmentReportsService"
        ]
      },
      "post": {
        "summary": "Create a new report",
        "operationId": "AssessmentReportsService_CreateAssessmentReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAssessmentReportResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAssessmentReportRequest"
            }
          }
        ],
        "tags": [
          "AssessmentReportsService"
        ]
      }
    },
    "/api/private/assessments/reports/{id}": {
      "get": {
        "summary": "Get a report",
        "operationId": "AssessmentReportsService_GetAssessmentReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAssessmentReportResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include_query_variables",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "include_inactive_queries",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AssessmentReportsService"
        ]
      },
      "delete": {
        "summary": "Delete a report",
        "operationId": "AssessmentReportsService_DeleteAssessmentReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAssessmentReportResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentReportsService"
        ]
      },
      "put": {
        "summary": "Update a report",
        "operationId": "AssessmentReportsService_UpdateAssessmentReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAssessmentReportResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAssessmentReportRequest"
            }
          }
        ],
        "tags": [
          "AssessmentReportsService"
        ]
      }
    },
    "/api/private/assessments/resources/{resource_type}:get_permission_types": {
      "get": {
        "operationId": "AssessmentQueryService_GetResourcePermissionTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetResourcePermissionTypesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_type",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/rules": {
      "get": {
        "operationId": "AssessmentRuleService_ListAssessmentRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAssessmentRulesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      },
      "post": {
        "operationId": "AssessmentRuleService_CreateAssessmentRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAssessmentRuleResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAssessmentRuleRequest"
            }
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      }
    },
    "/api/private/assessments/rules/{id}": {
      "get": {
        "operationId": "AssessmentRuleService_GetAssessmentRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAssessmentRuleResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      },
      "delete": {
        "operationId": "AssessmentRuleService_DeleteAssessmentRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAssessmentRuleResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      },
      "put": {
        "operationId": "AssessmentRuleService_UpdateAssessmentRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAssessmentRuleResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAssessmentRuleRequest"
            }
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      }
    },
    "/api/private/assessments/rules/{id}/alerts": {
      "get": {
        "operationId": "AssessmentRuleService_ListAssessmentRuleAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAssessmentRuleAlertsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "created_after",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      }
    },
    "/api/private/assessments/rules/{id}/alerts:ack": {
      "post": {
        "operationId": "AssessmentRuleService_AcknowledgeRuleAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AcknowledgeRuleAlertResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AcknowledgeRuleAlertRequest"
            }
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      }
    },
    "/api/private/assessments/rules/{id}:add_notification": {
      "post": {
        "operationId": "AssessmentRuleService_AddRuleNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddRuleNotificationResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddRuleNotificationRequest"
            }
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      }
    },
    "/api/private/assessments/rules/{id}:disable": {
      "put": {
        "operationId": "AssessmentRuleService_DisableAssessmentRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DisableAssessmentRuleResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      }
    },
    "/api/private/assessments/rules/{id}:enable": {
      "put": {
        "operationId": "AssessmentRuleService_EnableAssessmentRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EnableAssessmentRuleResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      }
    },
    "/api/private/assessments/rules/{id}:remove_notification": {
      "post": {
        "operationId": "AssessmentRuleService_RemoveRuleNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RemoveRuleNotificationResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RemoveRuleNotificationRequest"
            }
          }
        ],
        "tags": [
          "AssessmentRuleService"
        ]
      }
    },
    "/api/private/assessments/variables": {
      "get": {
        "operationId": "AssessmentQueryVariableService_ListAssessmentQueryVariable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAssessmentQueryVariableResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "description": "filter.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryVariableService"
        ]
      },
      "post": {
        "operationId": "AssessmentQueryVariableService_CreateAssessmentQueryVariable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAssessmentQueryVariableResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAssessmentQueryVariableRequest"
            }
          }
        ],
        "tags": [
          "AssessmentQueryVariableService"
        ]
      }
    },
    "/api/private/assessments/variables/{id}": {
      "get": {
        "operationId": "AssessmentQueryVariableService_GetAssessmentQueryVariable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAssessmentQueryVariableResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryVariableService"
        ]
      },
      "delete": {
        "operationId": "AssessmentQueryVariableService_DeleteAssessmentQueryVariable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAssessmentQueryVariableResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryVariableService"
        ]
      },
      "put": {
        "operationId": "AssessmentQueryVariableService_UpdateAssessmentQueryVariable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAssessmentQueryVariableResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAssessmentQueryVariableRequest"
            }
          }
        ],
        "tags": [
          "AssessmentQueryVariableService"
        ]
      }
    },
    "/api/private/assessments/variables/{id}/queries": {
      "get": {
        "operationId": "AssessmentQueryService_ListQueryByVariable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListQueryByVariableResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/violations": {
      "get": {
        "operationId": "AssessmentQueryService_ListViolations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListViolationsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "query_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "suppressed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "occurred_at_after",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "recipe_available",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/violations/{id}": {
      "get": {
        "operationId": "AssessmentQueryService_GetViolation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetViolationResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/violations/{id}:recipe": {
      "get": {
        "operationId": "AssessmentQueryService_GetRecipeAssessmentViolation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRecipeAssessmentViolationResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/violations/{id}:suppress": {
      "put": {
        "operationId": "AssessmentQueryService_SuppressViolation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SuppressViolationResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/violations/{id}:unsuppress": {
      "put": {
        "operationId": "AssessmentQueryService_UnsuppressViolation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UnsuppressViolationResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/assessments/violations:evaluate": {
      "put": {
        "operationId": "AssessmentQueryService_EvaluateViolations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EvaluateViolationsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "AssessmentQueryService"
        ]
      }
    },
    "/api/private/auth/setting/mfa": {
      "get": {
        "operationId": "AuthService_GetMFAStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMFAStatusResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/private/auth/setting/mfa:disable": {
      "post": {
        "operationId": "AuthService_DisableMFA",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DisableMFAResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DisableMFARequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/private/auth/setting/mfa:enable": {
      "post": {
        "operationId": "AuthService_EnableMFA",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EnableMFAResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EnableMFARequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/private/auth/setting/samlconfig": {
      "get": {
        "operationId": "AuthService_GetSamlConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSamlConnectionResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "AuthService"
        ]
      },
      "post": {
        "operationId": "AuthService_CreateSamlConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSamlConnectionResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSamlConnectionRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      },
      "put": {
        "operationId": "AuthService_UpdateSamlConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSamlConnectionResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateSamlConnectionRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/private/auth/setting/samlstatus": {
      "get": {
        "operationId": "AuthService_GetSamlConnectionStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSamlConnectionStatusResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/private/auth/setting/samlstatus:disable": {
      "post": {
        "operationId": "AuthService_DisableSamlConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DisableSamlConnectionResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DisableSamlConnectionRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/private/auth/setting/samlstatus:enable": {
      "post": {
        "operationId": "AuthService_EnableSamlConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EnableSamlConnectionResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EnableSamlConnectionRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/private/dataPlanes": {
      "get": {
        "operationId": "DataPlaneService_ListDataPlanes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDataPlanesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "DataPlaneService"
        ]
      }
    },
    "/api/private/dataPlanes/{id}": {
      "get": {
        "operationId": "DataPlaneService_GetDataPlane",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDataPlaneResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DataPlaneService"
        ]
      }
    },
    "/api/private/dataPlanes/{id}:upgrade": {
      "post": {
        "operationId": "DataPlaneService_UpgradeDataPlane",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpgradeDataPlaneResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpgradeDataPlaneRequest"
            }
          }
        ],
        "tags": [
          "DataPlaneService"
        ]
      }
    },
    "/api/private/dataPlanes:addkey": {
      "post": {
        "operationId": "DataPlaneService_CreateDataPlaneAddKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateDataPlaneAddKeyResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateDataPlaneAddKeyRequest"
            }
          }
        ],
        "tags": [
          "DataPlaneService"
        ]
      }
    },
    "/api/private/events": {
      "get": {
        "operationId": "CookieEventService_ListCookieEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCookieEventsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_time",
            "description": "filters.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "SYSTEM",
              "INTEGRATIONS",
              "RULE"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "INFO",
              "WARNING",
              "ERROR"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CookieEventService"
        ]
      }
    },
    "/api/private/events:count": {
      "get": {
        "operationId": "CookieEventService_CountCookieEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CountCookieEventsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "SYSTEM",
              "INTEGRATIONS",
              "RULE"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "INFO",
              "WARNING",
              "ERROR"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CookieEventService"
        ]
      }
    },
    "/api/private/notifications": {
      "get": {
        "operationId": "NotificationService_ListNotifications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListNotificationsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "NotificationService"
        ]
      }
    },
    "/api/private/notifications/emails": {
      "get": {
        "operationId": "NotificationService_ListEmails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEmailsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "NotificationService"
        ]
      },
      "post": {
        "operationId": "NotificationService_SaveEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SaveEmailResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SaveEmailRequest"
            }
          }
        ],
        "tags": [
          "NotificationService"
        ]
      }
    },
    "/api/private/notifications/emails/{id}": {
      "get": {
        "operationId": "NotificationService_GetEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetEmailResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NotificationService"
        ]
      },
      "delete": {
        "operationId": "NotificationService_DeleteEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteEmailResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NotificationService"
        ]
      },
      "put": {
        "operationId": "NotificationService_UpdateEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateEmailResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateEmailRequest"
            }
          }
        ],
        "tags": [
          "NotificationService"
        ]
      }
    },
    "/api/private/notifications/emails:test": {
      "post": {
        "operationId": "NotificationService_TestEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TestEmailResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TestEmailRequest"
            }
          }
        ],
        "tags": [
          "NotificationService"
        ]
      }
    },
    "/api/private/notifications/webhooks": {
      "get": {
        "operationId": "NotificationService_ListWebhooks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListWebhooksResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "NotificationService"
        ]
      },
      "post": {
        "operationId": "NotificationService_SaveWebhook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SaveWebhookResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SaveWebhookRequest"
            }
          }
        ],
        "tags": [
          "NotificationService"
        ]
      }
    },
    "/api/private/notifications/webhooks/{id}": {
      "get": {
        "operationId": "NotificationService_GetWebhook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetWebhookResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NotificationService"
        ]
      },
      "delete": {
        "operationId": "NotificationService_DeleteWebhook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteWebhookResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NotificationService"
        ]
      },
      "put": {
        "operationId": "NotificationService_UpdateWebhook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateWebhookResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateWebhookRequest"
            }
          }
        ],
        "tags": [
          "NotificationService"
        ]
      }
    },
    "/api/private/notifications/webhooks:test": {
      "post": {
        "operationId": "NotificationService_TestWebhook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TestWebhookResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TestWebhookRequest"
            }
          }
        ],
        "tags": [
          "NotificationService"
        ]
      }
    },
    "/api/private/notifications/{id}:test": {
      "post": {
        "operationId": "NotificationService_SendTestNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendTestNotificationResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NotificationService"
        ]
      }
    },
    "/api/private/queries/saved": {
      "post": {
        "operationId": "SavedQueryService_CreateSavedQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSavedQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSavedQueryRequest"
            }
          }
        ],
        "tags": [
          "SavedQueryService"
        ]
      }
    },
    "/api/private/queries/saved/{id}": {
      "get": {
        "operationId": "SavedQueryService_GetSavedQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSavedQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SavedQueryService"
        ]
      },
      "delete": {
        "operationId": "SavedQueryService_DeleteSavedQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSavedQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SavedQueryService"
        ]
      }
    },
    "/api/private/recipes": {
      "get": {
        "operationId": "RecipeService_ListRecipes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRecipesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "RECIPE_STATE_UNDEFINED",
              "DEFINING",
              "IN_PROGRESS",
              "EXECUTED",
              "VERIFIED"
            ],
            "default": "RECIPE_STATE_UNDEFINED"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "RECIPE_CATEGORY_UNDEFINED",
              "RECIPE_CATEGORY_VIOLATION",
              "RECIPE_CATEGORY_REMOVE_RELATIONSHIP"
            ],
            "default": "RECIPE_CATEGORY_UNDEFINED"
          },
          {
            "name": "instruction_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "RECIPE_INSTRUCTION_TYPE_UNDEFINED",
              "MANUAL"
            ],
            "default": "RECIPE_INSTRUCTION_TYPE_UNDEFINED"
          },
          {
            "name": "started_at_after",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "executed_at_after",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      },
      "post": {
        "operationId": "RecipeService_CreateRecipe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateRecipeResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRecipeRequest"
            }
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    },
    "/api/private/recipes/tasks/{task_id}": {
      "get": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
        "operationId": "RecipeService_GetNeighborTaskStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NeighborTask"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    },
    "/api/private/recipes/{id}": {
      "get": {
        "operationId": "RecipeService_GetRecipe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRecipeResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      },
      "delete": {
        "operationId": "RecipeService_DeleteRecipe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteRecipeResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      },
      "put": {
        "operationId": "RecipeService_UpdateRecipe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateRecipeResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateRecipeRequest"
            }
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    },
    "/api/private/recipes/{id}:mark_as_executed": {
      "put": {
        "operationId": "RecipeService_MarkRecipeAsExecuted",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MarkRecipeAsExecutedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MarkRecipeAsExecutedRequest"
            }
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    },
    "/api/private/recipes/{id}:options": {
      "get": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
        "operationId": "RecipeService_GetOptionsForRecipe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRecipeOptionsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    },
    "/api/private/recipes:check_available": {
      "get": {
        "operationId": "RecipeService_CheckRecipeAvailable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckRecipeAvailableResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "node_type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    },
    "/api/private/recipes:remove_relationship_recipe_options": {
      "post": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE\nbuf:lint:ignore RPC_REQUEST_STANDARD_NAME\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
        "operationId": "RecipeService_GetRemoveRelationshipOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRecipeOptionsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AvailableRecipeWithID"
            }
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    },
    "/api/private/recipes:start_neighbor_effect_task": {
      "post": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
        "operationId": "RecipeService_StartNeighborEffectTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NeighborTask"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartNeighborEffectTaskRequest"
            }
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    },
    "/api/private/recipes:violation_recipe_options": {
      "get": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
        "operationId": "RecipeService_GetViolationRecipeOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRecipeOptionsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "violation_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    },
    "/api/private/roles": {
      "get": {
        "operationId": "RoleService_ListRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRoleResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "RoleService"
        ]
      }
    },
    "/api/private/roles/{id}": {
      "get": {
        "operationId": "RoleService_GetRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRoleResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/api/private/system": {
      "get": {
        "operationId": "SystemService_GetSystem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSystemResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "SystemService"
        ]
      }
    },
    "/api/private/system/audit": {
      "get": {
        "operationId": "SystemService_ListAuditEntries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAuditEntriesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "url",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "method",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time_before",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time_after",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SystemService"
        ]
      }
    },
    "/api/private/system/init/items": {
      "get": {
        "operationId": "SystemService_ListInitItemsSystem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListInitItemsSystemResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "SystemService"
        ]
      }
    },
    "/api/private/system/init/items/{id}": {
      "get": {
        "operationId": "SystemService_GetInitItemSystem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetInitItemSystemResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SystemService"
        ]
      },
      "put": {
        "operationId": "SystemService_UpdateInitItemSystem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateInitItemSystemResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateInitItemSystemRequest"
            }
          }
        ],
        "tags": [
          "SystemService"
        ]
      }
    },
    "/api/private/system:userinit": {
      "get": {
        "operationId": "SystemService_GetUserInitSystem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserInitSystemResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "SystemService"
        ]
      },
      "post": {
        "operationId": "SystemService_UserInitSystem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserInitSystemResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserInitSystemRequest"
            }
          }
        ],
        "tags": [
          "SystemService"
        ]
      }
    },
    "/api/private/users": {
      "get": {
        "operationId": "UserService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "UserService"
        ]
      },
      "post": {
        "operationId": "UserService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateUserResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/private/users/updatepassword": {
      "post": {
        "operationId": "UserService_UpdatePasswordForSelf",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdatePasswordForSelfResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdatePasswordForSelfRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/private/users/{id}": {
      "get": {
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/private/users/{id}/roles": {
      "post": {
        "operationId": "UserService_UpdateUserRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserRolesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserRolesRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/private/users/{id}:disable": {
      "post": {
        "operationId": "UserService_DisableUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DisableUserResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DisableUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/private/users/{id}:enable": {
      "post": {
        "operationId": "UserService_EnableUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EnableUserResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EnableUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/private/users/{id}:password": {
      "post": {
        "operationId": "UserService_UpdateUserPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserPasswordResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserPasswordRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/private/workflows/access": {
      "get": {
        "operationId": "WorkflowService_ListAccessWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccessWorkflowResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "WorkflowService"
        ]
      },
      "post": {
        "operationId": "WorkflowService_CreateAccessWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccessWorkflowResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAccessWorkflowRequest"
            }
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/api/private/workflows/access/{id}": {
      "get": {
        "operationId": "WorkflowService_GetAccessWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAccessWorkflowResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      },
      "delete": {
        "operationId": "WorkflowService_DeleteAccessWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAccessWorkflowResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/api/private/workflows/access/{workflow_id}/certifications": {
      "get": {
        "operationId": "WorkflowService_ListAccessWorkflowCertification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccessWorkflowCertificationResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      },
      "post": {
        "operationId": "WorkflowService_CreateAccessWorkflowCertification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccessWorkflowCertificationResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAccessWorkflowCertificationRequest"
            }
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/api/v1/providers/aws": {
      "get": {
        "operationId": "ProviderService_ListAwsProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAwsProvidersResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "ProviderService_CreateAwsProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAwsProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAwsProviderRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/aws/{id}": {
      "get": {
        "operationId": "ProviderService_GetAwsProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAwsProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "ProviderService_DeleteAwsProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAwsProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/aws/{id}:checkpolicy": {
      "get": {
        "operationId": "ProviderService_CheckCaiPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckCaiPolicyResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/aws/{provider.id}": {
      "patch": {
        "operationId": "ProviderService_UpdateAwsProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAwsProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "provider.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAwsProviderRequestAwsProvider"
            }
          },
          {
            "name": "update_mask.paths",
            "description": "The set of field mask paths.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/aws:trustpolicy": {
      "get": {
        "operationId": "ProviderService_AwsAssumeRoleTrustPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AwsAssumeRoleTrustPolicyResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "assume_role_external_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/azure": {
      "get": {
        "operationId": "ProviderService_ListAzureProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAzureProvidersResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "ProviderService_CreateAzureProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAzureProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAzureProviderRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/azure/{id}": {
      "get": {
        "operationId": "ProviderService_GetAzureProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAzureProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "ProviderService_DeleteAzureProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAzureProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/azure/{provider.id}": {
      "patch": {
        "operationId": "ProviderService_UpdateAzureProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAzureProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "provider.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAzureProviderRequestAzureProvider"
            }
          },
          {
            "name": "update_mask.paths",
            "description": "The set of field mask paths.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/custom": {
      "get": {
        "operationId": "ProviderService_ListCustomProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCustomProvidersResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "ProviderService_CreateCustomProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCustomProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCustomProviderRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/custom/templates": {
      "get": {
        "operationId": "ProviderService_ListCustomProviderTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCustomProviderTemplatesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/custom/{id}": {
      "get": {
        "operationId": "ProviderService_GetCustomProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCustomProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "ProviderService_DeleteCustomProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteCustomProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/custom/{id}/datasources": {
      "get": {
        "operationId": "ProviderService_ListCustomProvidersDataSources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCustomProvidersDataSourcesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "ProviderService_CreateCustomProvidersDataSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCustomProvidersDataSourceResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCustomProvidersDataSourceRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/custom/{id}/datasources/{data_source_id}": {
      "delete": {
        "operationId": "ProviderService_DeleteCustomProviderDatasource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteCustomProviderDatasourceResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data_source_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/custom/{id}/datasources/{data_source_id}:push": {
      "post": {
        "operationId": "ProviderService_PushCustomProviderDatasource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PushCustomProviderDatasourceResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data_source_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PushCustomProviderDatasourceRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/custom:pushkey": {
      "post": {
        "operationId": "ProviderService_CreateCustomProviderPushKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCustomProviderPushKeyResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCustomProviderPushKeyRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/datasources": {
      "get": {
        "operationId": "DataSourceService_ListDataSources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDataSourcesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "description": "When specified, only data sources matching the filter will be returned.\nValid attributes: datasource_type\nValid operators: EQ\nE.g. 'datasource_type eq \"extractor\"'.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DataSourceService"
        ]
      }
    },
    "/api/v1/providers/datasources/{id}": {
      "get": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
        "operationId": "DataSourceService_GetDataSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDataSourceResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DataSourceService"
        ]
      },
      "put": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
        "operationId": "DataSourceService_UpdateDataSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateDataSourceResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateDataSourceRequest"
            }
          }
        ],
        "tags": [
          "DataSourceService"
        ]
      }
    },
    "/api/v1/providers/datasources/{id}:disable": {
      "put": {
        "operationId": "DataSourceService_DisableDataSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DisableDataSourceResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DataSourceService"
        ]
      }
    },
    "/api/v1/providers/datasources/{id}:enable": {
      "put": {
        "operationId": "DataSourceService_EnableDataSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EnableDataSourceResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DataSourceService"
        ]
      }
    },
    "/api/v1/providers/okta": {
      "get": {
        "operationId": "ProviderService_ListOktaProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOktaProvidersResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "ProviderService_CreateOktaProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateOktaProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOktaProviderRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/okta/{id}": {
      "get": {
        "operationId": "ProviderService_GetOktaProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOktaProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "ProviderService_DeleteOktaProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteOktaProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/okta/{provider.id}": {
      "patch": {
        "operationId": "ProviderService_UpdateOktaProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOktaProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "provider.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOktaProviderRequestOktaProvider"
            }
          },
          {
            "name": "update_mask.paths",
            "description": "The set of field mask paths.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/onelogin": {
      "get": {
        "operationId": "ProviderService_ListOneloginProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOneloginProvidersResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "ProviderService_CreateOneloginProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateOneloginProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOneloginProviderRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/onelogin/{id}": {
      "get": {
        "operationId": "ProviderService_GetOneloginProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOneloginProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "ProviderService_DeleteOneloginProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteOneloginProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/onelogin/{provider.id}": {
      "patch": {
        "operationId": "ProviderService_UpdateOneloginProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOneloginProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "provider.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOneloginProviderRequestOneloginProvider"
            }
          },
          {
            "name": "update_mask.paths",
            "description": "The set of field mask paths.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/snowflake": {
      "get": {
        "operationId": "ProviderService_ListSnowflakeProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSnowflakeProvidersResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "ProviderService_CreateSnowflakeProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSnowflakeProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSnowflakeProviderRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/snowflake/{id}": {
      "get": {
        "operationId": "ProviderService_GetSnowflakeProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSnowflakeProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "ProviderService_DeleteSnowflakeProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSnowflakeProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/snowflake/{provider.id}": {
      "patch": {
        "operationId": "ProviderService_UpdateSnowflakeProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSnowflakeProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "provider.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateSnowflakeProviderRequestSnowflakeProvider"
            }
          },
          {
            "name": "update_mask.paths",
            "description": "The set of field mask paths.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/trino": {
      "get": {
        "operationId": "ProviderService_ListTrinoProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTrinoProvidersResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "ProviderService_CreateTrinoProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTrinoProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTrinoProviderRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/trino/{id}": {
      "get": {
        "operationId": "ProviderService_GetTrinoProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTrinoProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "ProviderService_DeleteTrinoProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteTrinoProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/trino/{provider.id}": {
      "patch": {
        "operationId": "ProviderService_UpdateTrinoProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateTrinoProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "provider.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateTrinoProviderRequestTrinoProvider"
            }
          },
          {
            "name": "update_mask.paths",
            "description": "The set of field mask paths.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/{id}:disable": {
      "put": {
        "operationId": "ProviderService_DisableProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DisableProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/providers/{id}:enable": {
      "put": {
        "operationId": "ProviderService_EnableProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EnableProviderResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/api/v1/sessions": {
      "get": {
        "operationId": "SessionService_GetActiveSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetActiveSessionResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "SessionService"
        ]
      },
      "delete": {
        "operationId": "SessionService_DeleteSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSessionResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "SessionService"
        ]
      },
      "post": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE",
        "operationId": "SessionService_CreateSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSessionResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSessionRequest"
            }
          }
        ],
        "tags": [
          "SessionService"
        ]
      }
    },
    "/api/v1/sessions:refresh": {
      "post": {
        "operationId": "SessionService_RefreshSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RefreshSessionResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RefreshSessionRequest"
            }
          }
        ],
        "tags": [
          "SessionService"
        ]
      }
    },
    "/api/v1/sessions:token": {
      "post": {
        "summary": "buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
        "operationId": "SessionService_CreateSessionFromToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSessionResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSessionFromTokenRequest"
            }
          }
        ],
        "tags": [
          "SessionService"
        ]
      }
    },
    "/graph/private/cookie_tags": {
      "post": {
        "summary": "Creates a Cookie tag",
        "operationId": "CookieTagsService_CreateTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTagResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTagRequest"
            }
          }
        ],
        "tags": [
          "CookieTagsService"
        ]
      }
    },
    "/graph/private/cookie_tags:get_references": {
      "post": {
        "summary": "Gets the list of existing nodes that contain this tag",
        "operationId": "CookieTagsService_GetCookieTagReferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCookieTagReferencesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCookieTagReferencesRequest"
            }
          }
        ],
        "tags": [
          "CookieTagsService"
        ]
      }
    },
    "/graph/private/nodes/cookie_tags": {
      "post": {
        "summary": "Adds a tag to a node",
        "operationId": "CookieTagsService_AddTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddTagsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddTagsRequest"
            }
          }
        ],
        "tags": [
          "CookieTagsService"
        ]
      }
    },
    "/graph/private/nodes/cookie_tags:delete": {
      "post": {
        "summary": "Removes a tag from a node",
        "operationId": "CookieTagsService_RemoveTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RemoveTagResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RemoveTagRequest"
            }
          }
        ],
        "tags": [
          "CookieTagsService"
        ]
      }
    },
    "/graph/private/pgSubgraphQuery": {
      "get": {
        "summary": "List queries",
        "operationId": "PGSubgraphQueriesService_ListPGSubgraphQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPGSubgraphQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "tags": [
          "PGSubgraphQueriesService"
        ]
      },
      "post": {
        "summary": "Create a new PG query",
        "operationId": "PGSubgraphQueriesService_CreatePGSubgraphQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreatePGSubgraphQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreatePGSubgraphQueryRequest"
            }
          }
        ],
        "tags": [
          "PGSubgraphQueriesService"
        ]
      }
    },
    "/graph/private/pgSubgraphQuery/{id}": {
      "get": {
        "summary": "Get a PG query",
        "operationId": "PGSubgraphQueriesService_GetPGSubgraphQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPGSubgraphQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PGSubgraphQueriesService"
        ]
      },
      "delete": {
        "summary": "Delete a query",
        "operationId": "PGSubgraphQueriesService_DeletePGSubgraphQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeletePGSubgraphQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": ".errorstatus.ExtApiErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PGSubgraphQueriesService"
        ]
      }
    }
  },
  "definitions": {
    "CookieEventCategory": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "SYSTEM",
        "INTEGRATIONS",
        "RULE"
      ],
      "default": "UNKNOWN"
    },
    "DataSourceAgentType": {
      "type": "string",
      "enum": [
        "AWS_DYNAMODB",
        "AWS_EC2",
        "AWS_EMR",
        "AWS_IAM",
        "AWS_KMS",
        "AWS_RDS_MYSQL",
        "AWS_RDS_POSTGRES",
        "AWS_REDSHIFT",
        "AWS_REDSHIFT_CLUSTER",
        "AWS_RDS",
        "AWS_S3",
        "AZURE",
        "AZURE_SHAREPOINT",
        "AZURE_SHAREPOINT_GLOBAL",
        "AZURE_VM",
        "CUSTOM_APPLICATION",
        "CUSTOM_BITBUCKET",
        "CUSTOM_IDP",
        "NAME_TAG_PATTERN",
        "OKTA",
        "ONE_LOGIN",
        "SNOWFLAKE",
        "TRINO"
      ],
      "default": "AWS_DYNAMODB"
    },
    "GetResourcePermissionTypesResponsePermission": {
      "type": "object",
      "properties": {
        "permission_name": {
          "type": "string"
        }
      }
    },
    "GetTimeSeriesResponseDataPoint": {
      "type": "object",
      "properties": {
        "evaluated_at": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GraphStringListProperty": {
      "type": "object",
      "properties": {
        "string_list_property": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NodeSpecCollectionNodeSpec": {
      "type": "object",
      "properties": {
        "node_type": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CookieTag"
          }
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SubGraphRequestCondition"
          }
        },
        "node_id": {
          "type": "string"
        },
        "excluded_tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CookieTag"
          }
        }
      }
    },
    "SchemaGroup": {
      "type": "string",
      "enum": [
        "ORGANIZATION_UNIT",
        "USER",
        "GROUP",
        "ROLE",
        "PRIVILEGE",
        "DOMAIN",
        "POLICY",
        "INSTANCE",
        "DATA_STORE",
        "SCHEMA",
        "TABLE",
        "COLUMN",
        "SERVICE",
        "TENANT",
        "APPLICATION",
        "CLOUD_PROVIDER",
        "POLICY_STATEMENT",
        "SERVICE_ACCOUNT",
        "APPLICATION_ROLE",
        "IAM_USER",
        "IDP_USER",
        "LOCAL_USER",
        "IAM_GROUP",
        "IDP_GROUP",
        "LOCAL_GROUP",
        "NETWORK",
        "NETWORK_SECURITY",
        "AWS_INSTANCE",
        "LOCAL_ROLE",
        "ACCOUNT",
        "STREAM",
        "INDEX",
        "FOLDER",
        "NODE",
        "STUDIO",
        "NOTEBOOK_EXECUTION",
        "CLUSTER",
        "PROJECT",
        "REPO",
        "EFFECTIVE_PERMISSION",
        "SITE",
        "CUSTOM_RESOURCE",
        "CUSTOM_SUBRESOURCE"
      ],
      "default": "ORGANIZATION_UNIT"
    },
    "SubGraphRequestNodeType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of a node."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SubGraphRequestCondition"
          },
          "title": "Conditions on all nodes of the type.  Legacy AND-only, deprecate"
        },
        "include_high_cardinality": {
          "type": "boolean",
          "title": "If type is \"*\", whether the \"*\" includes high cardinality node types"
        },
        "root_condition": {
          "$ref": "#/definitions/SubGraphRequestParentOrLeafCondition",
          "title": "Conditions on all nodes of the type.  Boolean logic support"
        }
      },
      "description": "Node type that will be part of a subgraph."
    },
    "SubGraphRequestParentCondition": {
      "type": "object",
      "properties": {
        "not": {
          "type": "boolean"
        },
        "or": {
          "type": "boolean"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubGraphRequestParentOrLeafCondition"
          }
        }
      }
    },
    "SubGraphRequestParentOrLeafCondition": {
      "type": "object",
      "properties": {
        "leaf_condition": {
          "$ref": "#/definitions/v1SubGraphRequestCondition"
        },
        "parent_condition": {
          "$ref": "#/definitions/SubGraphRequestParentCondition"
        }
      }
    },
    "api_protosv1AwsProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "vendor_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1ProviderType"
        },
        "state": {
          "$ref": "#/definitions/v1ProviderState"
        },
        "data_plane_id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ProviderStatus"
        },
        "account_id": {
          "type": "string"
        },
        "credentials_type": {
          "$ref": "#/definitions/v1AwsCredentialsType"
        },
        "access_key_id": {
          "type": "string"
        },
        "assume_role_name": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "db_user": {
          "type": "string"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AwsServiceType"
          }
        }
      }
    },
    "api_protosv1AzureProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "vendor_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1ProviderType"
        },
        "state": {
          "$ref": "#/definitions/v1ProviderState"
        },
        "data_plane_id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ProviderStatus"
        },
        "account_id": {
          "type": "string"
        },
        "tenant_id": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        }
      }
    },
    "api_protosv1OktaProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "vendor_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1ProviderType"
        },
        "state": {
          "$ref": "#/definitions/v1ProviderState"
        },
        "data_plane_id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ProviderStatus"
        },
        "domain": {
          "type": "string"
        }
      }
    },
    "api_protosv1OneloginProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "vendor_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1ProviderType"
        },
        "state": {
          "$ref": "#/definitions/v1ProviderState"
        },
        "data_plane_id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ProviderStatus"
        },
        "domain": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        }
      }
    },
    "api_protosv1SnowflakeProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "vendor_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1ProviderType"
        },
        "state": {
          "$ref": "#/definitions/v1ProviderState"
        },
        "data_plane_id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ProviderStatus"
        },
        "account_locator": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "cloud": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "warehouse": {
          "type": "string"
        }
      }
    },
    "api_protosv1TrinoProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "vendor_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1ProviderType"
        },
        "state": {
          "$ref": "#/definitions/v1ProviderState"
        },
        "data_plane_id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ProviderStatus"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "aws_s3_object_config": {
          "$ref": "#/definitions/v1TrinoS3ObjectConfigResponse"
        },
        "ssl_certificate": {
          "type": "string"
        }
      }
    },
    "protobufFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, new values will\nbe appended to the existing repeated field in the target resource. Note that\na repeated field is only allowed in the last position of a `paths` string.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then new value will be merged into the existing sub-message\nin the target resource.\n\nFor example, given the target message:\n\n    f {\n      b {\n        d: 1\n        x: 2\n      }\n      c: [1]\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d: 10\n      }\n      c: [2]\n    }\n\nthen if the field mask is:\n\n paths: [\"f.b\", \"f.c\"]\n\nthen the result will be:\n\n    f {\n      b {\n        d: 10\n        x: 2\n      }\n      c: [1, 2]\n    }\n\nAn implementation may provide options to override this default behavior for\nrepeated and message fields.\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.\n\n## Field Mask Verification\n\nThe implementation of any API method which has a FieldMask type field in the\nrequest should verify the included field paths, and return an\n`INVALID_ARGUMENT` error if any path is unmappable.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "v1APIPingResponse": {
      "type": "object"
    },
    "v1AccessWorkflowCertification": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string"
        },
        "certification_id": {
          "type": "string"
        },
        "certification_note": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CertificationTypeDetail"
          }
        }
      }
    },
    "v1AcknowledgeAlertRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "note": {
          "type": "string"
        }
      }
    },
    "v1AcknowledgeAlertResponse": {
      "type": "object"
    },
    "v1AcknowledgeRuleAlertRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "note": {
          "type": "string"
        }
      }
    },
    "v1AcknowledgeRuleAlertResponse": {
      "type": "object"
    },
    "v1AddRuleNotificationRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "notification_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1AddRuleNotificationResponse": {
      "type": "object"
    },
    "v1AddTagsRequest": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CookieTag"
          }
        }
      }
    },
    "v1AddTagsResponse": {
      "type": "object"
    },
    "v1AssessmentQueryCategory": {
      "type": "string",
      "enum": [
        "IDP_ANALYSIS",
        "IAM_ANALYSIS",
        "DATA_ANALYSIS",
        "AZURE_RBAC_ANALYSIS",
        "INFRASTRUCTURE_ANALYSIS"
      ],
      "default": "IDP_ANALYSIS"
    },
    "v1AssessmentQueryLevel": {
      "type": "string",
      "enum": [
        "ANOMALY",
        "BASIC",
        "PREMIUM_ANOMALY",
        "PREMIUM_DATA",
        "PREMIUM_PRIVILEGE"
      ],
      "default": "ANOMALY"
    },
    "v1AssessmentQueryResultType": {
      "type": "string",
      "enum": [
        "NUMBER",
        "TIMESTAMP",
        "NODES"
      ],
      "default": "NUMBER"
    },
    "v1AssessmentQuerySnapshotDiffResponse": {
      "type": "object",
      "properties": {
        "added_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ExecuteAssessmentQueryResponseNode"
          }
        },
        "removed_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ExecuteAssessmentQueryResponseNode"
          }
        }
      }
    },
    "v1AssessmentQuerySpecSnapshotDiffRequest": {
      "type": "object",
      "properties": {
        "spec": {
          "$ref": "#/definitions/v1ExecuteAssessmentQuerySpecRequest"
        },
        "snapshot_a_id": {
          "type": "string",
          "format": "uint64"
        },
        "snapshot_b_id": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1AssessmentQueryType": {
      "type": "string",
      "enum": [
        "SYSTEM_CREATED",
        "SOURCE_TO_DESTINATION",
        "PRINCIPAL_TO_RESOURCE",
        "RESOURCE_TO_PRINCIPAL",
        "DESTINATION_NODES"
      ],
      "default": "SYSTEM_CREATED"
    },
    "v1AssessmentQueryVariableValue": {
      "type": "object",
      "properties": {
        "bool_value": {
          "type": "boolean"
        },
        "int64_value": {
          "type": "string",
          "format": "int64"
        },
        "string_value": {
          "type": "string"
        },
        "string_list_value": {
          "$ref": "#/definitions/GraphStringListProperty"
        },
        "timestamp_value": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1AssessmentReport": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AssessmentReportQueryEntry"
          }
        },
        "type": {
          "type": "string"
        },
        "variables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customized_variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CreateAssessmentQueryVariableRequest"
          }
        },
        "category": {
          "$ref": "#/definitions/v1AssessmentReportCategory"
        }
      }
    },
    "v1AssessmentReportCategory": {
      "type": "string",
      "enum": [
        "UNSET",
        "CUSTOMIZED",
        "SECURITY_SPECIALIST",
        "DATA_OWNERSHIP",
        "SEC_AND_DEV_OPS",
        "ASSURANCE_AND_RISK"
      ],
      "default": "UNSET"
    },
    "v1AssessmentReportQueryEntry": {
      "type": "object",
      "properties": {
        "section": {
          "type": "string"
        },
        "query": {
          "type": "string"
        }
      }
    },
    "v1AssessmentsBooleanOperator": {
      "type": "string",
      "enum": [
        "AND",
        "OR"
      ],
      "default": "AND"
    },
    "v1AuditEntry": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "started_at": {
          "type": "string",
          "format": "date-time"
        },
        "ended_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1AvailableRecipe": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1AvailableRecipeType"
        },
        "node_type": {
          "type": "string"
        },
        "relationship_node_type": {
          "type": "string"
        }
      }
    },
    "v1AvailableRecipeType": {
      "type": "string",
      "enum": [
        "UNKNOWN_RECIPE_TYPE",
        "REMOVE_RELATIONSHIP",
        "DELETE_ENTITY"
      ],
      "default": "UNKNOWN_RECIPE_TYPE"
    },
    "v1AvailableRecipeWithID": {
      "type": "object",
      "properties": {
        "available_recipe": {
          "$ref": "#/definitions/v1AvailableRecipe"
        },
        "node_id": {
          "type": "string"
        },
        "relationship_node_id": {
          "type": "string"
        }
      }
    },
    "v1AwsAssumeRoleTrustPolicyResponse": {
      "type": "object",
      "properties": {
        "trust_policy_json": {
          "type": "string"
        }
      }
    },
    "v1AwsCredentialsType": {
      "type": "string",
      "enum": [
        "STATIC",
        "EC2_INSTANCE_PROFILE",
        "ASSUME_CUSTOMER_ROLE"
      ],
      "default": "STATIC"
    },
    "v1AwsServiceType": {
      "type": "string",
      "enum": [
        "AWS_SERVICE_UNKNOWN",
        "REDSHIFT",
        "S3",
        "RDS_MYSQL",
        "RDS_POSTGRES",
        "EC2",
        "RDS",
        "DYNAMODB",
        "KMS",
        "REDSHIFT_CLUSTER",
        "EMR"
      ],
      "default": "AWS_SERVICE_UNKNOWN"
    },
    "v1CanonicalPermission": {
      "type": "string",
      "enum": [
        "METADATA_WRITE",
        "METADATA_READ",
        "METADATA_CREATE",
        "METADATA_DELETE",
        "DATA_READ",
        "DATA_WRITE",
        "DATA_CREATE",
        "DATA_DELETE",
        "NON_DATA"
      ],
      "default": "METADATA_WRITE"
    },
    "v1CanonicalPermissionCollection": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CanonicalPermission"
          }
        },
        "operator": {
          "$ref": "#/definitions/v1AssessmentsBooleanOperator"
        }
      }
    },
    "v1CertificationTypeDetail": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1CheckCaiPolicyResponse": {
      "type": "object",
      "properties": {
        "requires_update": {
          "type": "boolean"
        },
        "aws_account_id": {
          "type": "string"
        },
        "current_policy": {
          "type": "string"
        },
        "required_policy": {
          "type": "string"
        },
        "required_actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "overprivileged_actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1CheckRecipeAvailableResponse": {
      "type": "object",
      "properties": {
        "available_recipes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AvailableRecipe"
          }
        }
      }
    },
    "v1CloneQueryRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "customized_variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CreateAssessmentQueryVariableRequest"
          }
        }
      }
    },
    "v1CloneQueryResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CookieEventResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "category": {
          "$ref": "#/definitions/CookieEventCategory"
        },
        "severity": {
          "$ref": "#/definitions/v1Severity"
        },
        "name": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "entity": {
          "$ref": "#/definitions/v1Entity"
        },
        "entity_id": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/v1CookieEventResponseError"
        }
      }
    },
    "v1CookieEventResponseError": {
      "type": "object",
      "properties": {
        "reason": {
          "$ref": "#/definitions/v1ErrorReason"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        },
        "resolution": {
          "type": "string"
        },
        "request_id": {
          "type": "string"
        }
      }
    },
    "v1CookieTag": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1CountCookieEventsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1CreateAccessWorkflowCertificationRequest": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string"
        },
        "certification_note": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CertificationTypeDetail"
          }
        }
      }
    },
    "v1CreateAccessWorkflowCertificationResponse": {
      "type": "object",
      "properties": {
        "certification_id": {
          "type": "string"
        }
      }
    },
    "v1CreateAccessWorkflowRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "entity": {
          "$ref": "#/definitions/v1WorkflowEntity"
        },
        "class": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "review_type": {
          "type": "string"
        },
        "access_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1CreateAccessWorkflowResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateAssessmentQueryRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "query_type": {
          "$ref": "#/definitions/v1AssessmentQueryType"
        },
        "category": {
          "$ref": "#/definitions/v1AssessmentQueryCategory"
        },
        "level": {
          "$ref": "#/definitions/v1AssessmentQueryLevel"
        },
        "result_type": {
          "$ref": "#/definitions/v1AssessmentQueryResultType"
        },
        "permission_names": {
          "$ref": "#/definitions/v1PermissionNameCollection"
        },
        "canonical_permissions": {
          "$ref": "#/definitions/v1CanonicalPermissionCollection"
        },
        "variables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "required_intermediate_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "avoids_intermediate_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "destination_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "no_relation": {
          "type": "boolean"
        },
        "violation": {
          "type": "boolean"
        }
      }
    },
    "v1CreateAssessmentQueryResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateAssessmentQueryRuleRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "fn": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "$ref": "#/definitions/v1CreateAssessmentQueryWithoutNameRequest"
        }
      }
    },
    "v1CreateAssessmentQueryRuleResponse": {
      "type": "object",
      "properties": {
        "rule": {
          "$ref": "#/definitions/v1GetAssessmentRuleResponse"
        },
        "query": {
          "$ref": "#/definitions/v1GetAssessmentQueryResponse"
        }
      }
    },
    "v1CreateAssessmentQueryVariableRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1CreateAssessmentQueryVariableResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateAssessmentQueryWithoutNameRequest": {
      "type": "object",
      "properties": {
        "query_type": {
          "$ref": "#/definitions/v1AssessmentQueryType"
        },
        "category": {
          "$ref": "#/definitions/v1AssessmentQueryCategory"
        },
        "level": {
          "$ref": "#/definitions/v1AssessmentQueryLevel"
        },
        "result_type": {
          "$ref": "#/definitions/v1AssessmentQueryResultType"
        },
        "permission_names": {
          "$ref": "#/definitions/v1PermissionNameCollection"
        },
        "canonical_permissions": {
          "$ref": "#/definitions/v1CanonicalPermissionCollection"
        },
        "variables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "required_intermediate_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "avoids_intermediate_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "destination_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "no_relation": {
          "type": "boolean"
        },
        "violation": {
          "type": "boolean"
        }
      }
    },
    "v1CreateAssessmentReportRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AssessmentReportQueryEntry"
          }
        },
        "customized_variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CreateAssessmentQueryVariableRequest"
          }
        },
        "category": {
          "$ref": "#/definitions/v1AssessmentReportCategory"
        }
      }
    },
    "v1CreateAssessmentReportResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateAssessmentRuleRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "condition": {
          "$ref": "#/definitions/v1FnExpression"
        }
      }
    },
    "v1CreateAssessmentRuleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateAssessmentTimeSeriesDataPointResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateAssessmentViolationRuleResponse": {
      "type": "object",
      "properties": {
        "rule": {
          "$ref": "#/definitions/v1GetAssessmentRuleResponse"
        }
      }
    },
    "v1CreateAwsProviderRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "data_plane_id": {
          "type": "string"
        },
        "credentials_type": {
          "$ref": "#/definitions/v1AwsCredentialsType"
        },
        "access_key_id": {
          "type": "string"
        },
        "secret_key": {
          "type": "string"
        },
        "assume_role_name": {
          "type": "string"
        },
        "assume_role_external_id": {
          "type": "string"
        },
        "db_user": {
          "type": "string"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AwsServiceType"
          }
        }
      }
    },
    "v1CreateAwsProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1AwsProvider"
        }
      }
    },
    "v1CreateAzureProviderRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant_id": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "data_plane_id": {
          "type": "string"
        },
        "auth_certificate": {
          "type": "string"
        },
        "auth_certificate_password": {
          "type": "string"
        }
      }
    },
    "v1CreateAzureProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1AzureProvider"
        }
      }
    },
    "v1CreateCustomProviderDeprecatedRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "custom_template": {
          "type": "string"
        }
      }
    },
    "v1CreateCustomProviderDeprecatedResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateCustomProviderPushKeyDeprecatedRequest": {
      "type": "object"
    },
    "v1CreateCustomProviderPushKeyDeprecatedResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      }
    },
    "v1CreateCustomProviderPushKeyRequest": {
      "type": "object"
    },
    "v1CreateCustomProviderPushKeyResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      }
    },
    "v1CreateCustomProviderRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "custom_template": {
          "type": "string"
        }
      }
    },
    "v1CreateCustomProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v1CustomProvider"
        }
      }
    },
    "v1CreateCustomProvidersDataSourceDeprecatedRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1CreateCustomProvidersDataSourceDeprecatedResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateCustomProvidersDataSourceRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1CreateCustomProvidersDataSourceResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v1CustomProvidersDataSource"
        }
      }
    },
    "v1CreateDataPlaneAddKeyRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "expires_in_sec": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1CreateDataPlaneAddKeyResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "v1CreateOktaProviderRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "data_plane_id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "v1CreateOktaProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1OktaProvider"
        }
      }
    },
    "v1CreateOneloginProviderRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "data_plane_id": {
          "type": "string"
        }
      }
    },
    "v1CreateOneloginProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1OneloginProvider"
        }
      }
    },
    "v1CreatePGSubgraphQueryRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/v1SubGraphRequest"
        }
      }
    },
    "v1CreatePGSubgraphQueryResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateRecipeRequest": {
      "type": "object",
      "properties": {
        "violation_id": {
          "type": "string"
        },
        "option_id": {
          "type": "string"
        },
        "instruction_type": {
          "$ref": "#/definitions/v1RecipeInstructionType"
        },
        "name": {
          "type": "string"
        },
        "available_recipe_with_id": {
          "$ref": "#/definitions/v1AvailableRecipeWithID"
        }
      }
    },
    "v1CreateRecipeResponse": {
      "type": "object",
      "properties": {
        "recipe": {
          "$ref": "#/definitions/v1Recipe"
        }
      }
    },
    "v1CreateSamlConnectionRequest": {
      "type": "object",
      "properties": {
        "connection_data": {
          "$ref": "#/definitions/v1SamlConnectionData"
        }
      }
    },
    "v1CreateSamlConnectionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateSavedQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      }
    },
    "v1CreateSavedQueryResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "query": {
          "type": "string"
        }
      }
    },
    "v1CreateSessionFromTokenRequest": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "id_token": {
          "type": "string"
        }
      }
    },
    "v1CreateSessionRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1CreateSessionResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "token_type": {
          "type": "string"
        },
        "expires_in_sec": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1CreateSnowflakeProviderRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "account_locator": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "cloud": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "warehouse": {
          "type": "string"
        },
        "data_plane_id": {
          "type": "string"
        }
      }
    },
    "v1CreateSnowflakeProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1SnowflakeProvider"
        }
      }
    },
    "v1CreateTagRequest": {
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "#/definitions/v1CookieTag"
        }
      }
    },
    "v1CreateTagResponse": {
      "type": "object"
    },
    "v1CreateTrinoProviderRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "data_plane_id": {
          "type": "string"
        },
        "aws_s3_object_config": {
          "$ref": "#/definitions/v1TrinoS3ObjectConfig"
        },
        "ssl_certificate": {
          "type": "string"
        }
      }
    },
    "v1CreateTrinoProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1TrinoProvider"
        }
      }
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1CreateUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CustomProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "custom_template": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/v1ProviderState"
        },
        "application_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "idp_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1CustomProviderTemplate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1CustomProviderTemplateDeprecated": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1CustomProvidersDataSource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1DataSource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "datasource_type": {
          "$ref": "#/definitions/v1DataSourceType"
        },
        "agent_type": {
          "$ref": "#/definitions/DataSourceAgentType"
        },
        "status": {
          "$ref": "#/definitions/v1DataSourceStatus"
        },
        "provider_id": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/v1DataSourceState"
        },
        "effective_state": {
          "$ref": "#/definitions/v1DataSourceState"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "synced_at": {
          "type": "string"
        },
        "parsed_at": {
          "type": "string"
        }
      }
    },
    "v1DataSourceState": {
      "type": "string",
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "default": "ENABLED"
    },
    "v1DataSourceStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "SUCCESS",
        "ERROR",
        "UNAUTHENTICATED",
        "PERMISSION_DENIED"
      ],
      "default": "PENDING"
    },
    "v1DataSourceType": {
      "type": "string",
      "enum": [
        "DISCOVERER",
        "EXTRACTOR"
      ],
      "default": "DISCOVERER"
    },
    "v1DeleteAccessWorkflowResponse": {
      "type": "object"
    },
    "v1DeleteAssessmentQueryResponse": {
      "type": "object"
    },
    "v1DeleteAssessmentQueryVariableResponse": {
      "type": "object"
    },
    "v1DeleteAssessmentReportResponse": {
      "type": "object"
    },
    "v1DeleteAssessmentRuleResponse": {
      "type": "object"
    },
    "v1DeleteAwsProviderResponse": {
      "type": "object"
    },
    "v1DeleteAzureProviderResponse": {
      "type": "object"
    },
    "v1DeleteCookieEventsResponse": {
      "type": "object"
    },
    "v1DeleteCustomProviderDatasourceDeprecatedResponse": {
      "type": "object"
    },
    "v1DeleteCustomProviderDatasourceResponse": {
      "type": "object"
    },
    "v1DeleteCustomProviderDeprecatedResponse": {
      "type": "object"
    },
    "v1DeleteCustomProviderResponse": {
      "type": "object"
    },
    "v1DeleteEmailResponse": {
      "type": "object"
    },
    "v1DeleteOktaProviderResponse": {
      "type": "object"
    },
    "v1DeleteOneloginProviderResponse": {
      "type": "object"
    },
    "v1DeletePGSubgraphQueryResponse": {
      "type": "object"
    },
    "v1DeleteRecipeResponse": {
      "type": "object"
    },
    "v1DeleteSavedQueryResponse": {
      "type": "object"
    },
    "v1DeleteSessionResponse": {
      "type": "object"
    },
    "v1DeleteSnowflakeProviderResponse": {
      "type": "object"
    },
    "v1DeleteTrinoProviderResponse": {
      "type": "object"
    },
    "v1DeleteWebhookResponse": {
      "type": "object"
    },
    "v1DisableAssessmentRuleResponse": {
      "type": "object"
    },
    "v1DisableDataSourceResponse": {
      "type": "object"
    },
    "v1DisableMFARequest": {
      "type": "object"
    },
    "v1DisableMFAResponse": {
      "type": "object"
    },
    "v1DisableProviderResponse": {
      "type": "object"
    },
    "v1DisableSamlConnectionRequest": {
      "type": "object"
    },
    "v1DisableSamlConnectionResponse": {
      "type": "object"
    },
    "v1DisableUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1DisableUserResponse": {
      "type": "object"
    },
    "v1EnableAssessmentRuleResponse": {
      "type": "object"
    },
    "v1EnableDataSourceResponse": {
      "type": "object"
    },
    "v1EnableMFARequest": {
      "type": "object"
    },
    "v1EnableMFAResponse": {
      "type": "object"
    },
    "v1EnableProviderResponse": {
      "type": "object"
    },
    "v1EnableSamlConnectionRequest": {
      "type": "object"
    },
    "v1EnableSamlConnectionResponse": {
      "type": "object"
    },
    "v1EnableUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1EnableUserResponse": {
      "type": "object"
    },
    "v1Entity": {
      "type": "string",
      "enum": [
        "UNKNOWN_ENTITY",
        "DATASOURCE",
        "PROVIDER"
      ],
      "default": "UNKNOWN_ENTITY"
    },
    "v1ErrorReason": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "CANCELED",
        "INVALID_ARGUMENTS",
        "DEADLINE_EXCEEDED",
        "NOT_FOUND",
        "ALREADY_EXISTS",
        "PERMISSION_DENIED",
        "RESOURCE_EXHAUSTED",
        "FAILED_PRECONDITION",
        "ABORTED",
        "OUT_OF_RANGE",
        "UNIMPLEMENTED",
        "INTERNAL",
        "UNAVAILABLE",
        "DATA_LOSS",
        "UNAUTHENTICATED",
        "SYSTEM_UNINITIALIZED",
        "SYSTEM_INSIGHT_POINT_UNAVAILABLE",
        "AUTH_TOKEN_NOT_PRESENT",
        "AUTH_TOKEN_INVALID",
        "AUTH_UNAUTHENTICATED",
        "AUTH_TOKEN_OR_REFRESH_INVALID",
        "EXTRACTION_PERMISSION_DENIED",
        "EXTRACTION_AWS_POLICY_WILDCARD_ACTION",
        "EXTRACTION_RATE_LIMIT_EXCEEDED",
        "EXTRACTION_SQL_CONNECTION_DENIED",
        "EXTRACTION_AWS_POLICY_OUTDATED",
        "EXTRACTION_TENANT_NO_SPO_LICENSE",
        "EXTRACTION_TENANT_NO_AUTH_CERT",
        "ASSESSMENT_REPORT_CAI_REPORT_READ_ONLY",
        "RESPONSE_SIZE_EXCEEDED"
      ],
      "default": "UNKNOWN",
      "description": " - CANCELED: Generic error reasons corresponding to status codes.\nUsed as a default UserFacingErrorInfo when it is not explicitly set.\n - SYSTEM_UNINITIALIZED: Attempting to use APIs before initialization completed.\n - SYSTEM_INSIGHT_POINT_UNAVAILABLE: Insight point is temporarily or permanently unavailable.\n - AUTH_TOKEN_NOT_PRESENT: Attempting access to a secured endpoint without auth token present.\n - AUTH_TOKEN_INVALID: Attempting access to a secured endpoint with an invalid auth token.\n - AUTH_UNAUTHENTICATED: Attempting to get session without authenticated user.\n - AUTH_TOKEN_OR_REFRESH_INVALID: Attempting a refresh with invalid auth or refresh token.\n - EXTRACTION_PERMISSION_DENIED: Attempting extraction with insufficient permissions.\n\nExample of metadata:\n    {\n        \"provider_id\": \"a53afc81-1e27-4edd-ac34-031a89d4c973\",\n        \"permission\": \"s3:ListAllMyBuckets\"\n    }\n - EXTRACTION_AWS_POLICY_WILDCARD_ACTION: AWS extraction policy contains wildcard actions.\n - EXTRACTION_RATE_LIMIT_EXCEEDED: Attempting extraction has resulted in a rate limit exceeded exception.\n - EXTRACTION_SQL_CONNECTION_DENIED: Unable to connect to a sql instance. Can be a network access or credentials issue.\n - EXTRACTION_AWS_POLICY_OUTDATED: AWS extraction policy needs to be updated. Usually caused by adding extractor features.\nExample of metadata:\n    {\n        \"missing_actions\": \"s3:ListAllMyBuckets, ec2:ListInstances\",\n        \"redundant_actions\": \"s3:PutObject\"\n    }\n - EXTRACTION_TENANT_NO_SPO_LICENSE: Tenant does not have an SPO license for the given product\n - EXTRACTION_TENANT_NO_AUTH_CERT: Tenant does not have an authentication certificate needed to extract SharePoint information.\n - ASSESSMENT_REPORT_CAI_REPORT_READ_ONLY: Attempting to modify/delete a read-only Cookie.AI report.\n - RESPONSE_SIZE_EXCEEDED: Response size exceeded limit.  Retry with pagination enabled or lower limit."
    },
    "v1EvaluateViolationsResponse": {
      "type": "object"
    },
    "v1ExecuteAssessmentCustomizedQueryRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "include_nodes": {
          "type": "boolean"
        },
        "customized_variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CreateAssessmentQueryVariableRequest"
          }
        },
        "snapshot_id": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1ExecuteAssessmentQueryResponse": {
      "type": "object",
      "properties": {
        "result_type": {
          "type": "string"
        },
        "nodes_value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ExecuteAssessmentQueryResponseNode"
          }
        },
        "number_value": {
          "type": "integer",
          "format": "int32"
        },
        "timestamp_value": {
          "type": "string"
        },
        "result_node_type": {
          "type": "string"
        }
      }
    },
    "v1ExecuteAssessmentQueryResponseNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "properties": {
          "type": "object"
        },
        "destination_node_count": {
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ExecuteAssessmentQueryResponseNode"
          }
        }
      }
    },
    "v1ExecuteAssessmentQuerySpecRequest": {
      "type": "object",
      "properties": {
        "query_type": {
          "$ref": "#/definitions/v1AssessmentQueryType"
        },
        "include_nodes": {
          "type": "boolean"
        },
        "source_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "destination_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "required_intermediate_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "avoids_intermediate_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "permission_names": {
          "$ref": "#/definitions/v1PermissionNameCollection"
        },
        "canonical_permissions": {
          "$ref": "#/definitions/v1CanonicalPermissionCollection"
        },
        "customized_variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CreateAssessmentQueryVariableRequest"
          }
        },
        "no_relation": {
          "type": "boolean"
        },
        "snapshot_id": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1ExecuteNeighborEffectTaskResponse": {
      "type": "object"
    },
    "v1Expression": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "type": "string"
        }
      }
    },
    "v1FnExpression": {
      "type": "object",
      "properties": {
        "fn": {
          "type": "string"
        },
        "args": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Expression"
          }
        }
      },
      "title": "FnExpression is not an Expression to limit conditions to simple one function expressions"
    },
    "v1GeneralNotificationSetting": {
      "type": "object",
      "properties": {
        "all_assessment_rules": {
          "type": "boolean"
        },
        "assessment_rule_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "all_assessment_violations": {
          "type": "boolean"
        }
      },
      "title": "TODO:\n1. Move webhook api to /api/private \n2. Update webhook api to use general NotificationSetting"
    },
    "v1GetAccessWorkflowResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "entity": {
          "$ref": "#/definitions/v1WorkflowEntity"
        },
        "class": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "review_type": {
          "type": "string"
        },
        "last_certified_on": {
          "type": "string",
          "format": "date-time"
        },
        "access_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetActiveSessionResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "is_admin": {
          "type": "boolean"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetAssessmentAlertResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "rule_id": {
          "type": "string"
        },
        "node_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "added_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "removed_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "acknowledged": {
          "type": "boolean"
        },
        "note": {
          "type": "string"
        },
        "acknowledged_user_email": {
          "type": "string"
        },
        "node_details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1NodeDetail"
          }
        },
        "evaluated_at": {
          "type": "string",
          "format": "date-time"
        },
        "prev_evaluated_at": {
          "type": "string",
          "format": "date-time"
        },
        "notification_results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1NotificationResult"
          }
        }
      }
    },
    "v1GetAssessmentQueryNodeDetailsRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "customized_variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CreateAssessmentQueryVariableRequest"
          }
        },
        "snapshot_id": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1GetAssessmentQueryNodeDetailsResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ExecuteAssessmentQueryResponseNode"
          }
        }
      }
    },
    "v1GetAssessmentQueryResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/v1AssessmentQueryCategory"
        },
        "level": {
          "$ref": "#/definitions/v1AssessmentQueryLevel"
        },
        "result_type": {
          "$ref": "#/definitions/v1AssessmentQueryResultType"
        },
        "query_type": {
          "$ref": "#/definitions/v1AssessmentQueryType"
        },
        "permission_names": {
          "$ref": "#/definitions/v1PermissionNameCollection"
        },
        "canonical_permissions": {
          "$ref": "#/definitions/v1CanonicalPermissionCollection"
        },
        "variables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "required_intermediate_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "avoids_intermediate_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "destination_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "no_relation": {
          "type": "boolean"
        }
      }
    },
    "v1GetAssessmentQuerySpecDestinationNodesRequest": {
      "type": "object",
      "properties": {
        "spec": {
          "$ref": "#/definitions/v1ExecuteAssessmentQuerySpecRequest"
        },
        "source_node_id": {
          "type": "string"
        },
        "snapshot_id": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1GetAssessmentQueryVariableResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/v1AssessmentQueryVariableValue"
        },
        "type": {
          "type": "string"
        },
        "system_created": {
          "type": "boolean"
        }
      }
    },
    "v1GetAssessmentReportResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v1AssessmentReport"
        }
      }
    },
    "v1GetAssessmentRuleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "condition": {
          "$ref": "#/definitions/v1FnExpression"
        },
        "status": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "triggered": {
          "type": "boolean"
        },
        "last_evaluated_at": {
          "type": "string"
        },
        "evaluation_error": {
          "type": "string"
        },
        "node_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "node_details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1NodeDetail"
          }
        },
        "prev_evaluated_at": {
          "type": "string",
          "format": "date-time"
        },
        "query_id": {
          "type": "string"
        }
      }
    },
    "v1GetAwsProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1AwsProvider"
        }
      }
    },
    "v1GetAzureProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1AzureProvider"
        }
      }
    },
    "v1GetComparisonResponse": {
      "type": "object",
      "properties": {
        "baseline_value": {
          "type": "integer",
          "format": "int32"
        },
        "baseline_evaluate_at": {
          "type": "string"
        },
        "current_value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1GetCookieTagReferencesRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1GetCookieTagReferencesResponse": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetCustomProviderDeprecatedResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "custom_template": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "v1GetCustomProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v1CustomProvider"
        }
      }
    },
    "v1GetDataPlaneResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "public_key": {
          "type": "string"
        },
        "current_version": {
          "type": "string"
        },
        "pending_upgrade": {
          "type": "boolean"
        },
        "upgrade_available": {
          "type": "boolean"
        }
      }
    },
    "v1GetDataSourceDeprecatedResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "datasource_type": {
          "type": "string"
        },
        "agent_type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "provider_id": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "effective_state": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "synced_at": {
          "type": "string"
        },
        "parsed_at": {
          "type": "string"
        }
      }
    },
    "v1GetDataSourceResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v1DataSource"
        }
      }
    },
    "v1GetEmailResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "setting": {
          "$ref": "#/definitions/v1GeneralNotificationSetting"
        }
      }
    },
    "v1GetInitItemSystemResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int64"
        },
        "key": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "deonticity": {
          "type": "string"
        }
      }
    },
    "v1GetMFAStatusResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1GetOktaProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1OktaProvider"
        }
      }
    },
    "v1GetOneloginProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1OneloginProvider"
        }
      }
    },
    "v1GetPGSubgraphQueryResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/v1SubGraphRequest"
        },
        "created_by": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "failed_to_upgrade": {
          "type": "boolean"
        }
      }
    },
    "v1GetProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v1Provider"
        }
      }
    },
    "v1GetRecipeAssessmentViolationResponse": {
      "type": "object",
      "properties": {
        "recipe": {
          "$ref": "#/definitions/v1Recipe"
        }
      }
    },
    "v1GetRecipeOptionsResponse": {
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RecipeOption"
          }
        }
      }
    },
    "v1GetRecipeResponse": {
      "type": "object",
      "properties": {
        "recipe": {
          "$ref": "#/definitions/v1Recipe"
        }
      }
    },
    "v1GetResourcePermissionTypesResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetResourcePermissionTypesResponsePermission"
          }
        }
      }
    },
    "v1GetRoleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "is_admin": {
          "type": "boolean"
        }
      }
    },
    "v1GetSamlConnectionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "connection_data": {
          "$ref": "#/definitions/v1SamlConnectionData"
        },
        "metadata_url": {
          "type": "string"
        }
      }
    },
    "v1GetSamlConnectionStatusResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1GetSavedQueryResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "query": {
          "type": "string"
        }
      }
    },
    "v1GetSnowflakeProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1SnowflakeProvider"
        }
      }
    },
    "v1GetSystemResponse": {
      "type": "object",
      "properties": {
        "release": {
          "type": "string"
        }
      }
    },
    "v1GetTimeSeriesResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetTimeSeriesResponseDataPoint"
          }
        }
      }
    },
    "v1GetTrinoProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1TrinoProvider"
        }
      }
    },
    "v1GetUserInitSystemResponse": {
      "type": "object",
      "properties": {
        "is_user_init_required": {
          "type": "boolean"
        }
      }
    },
    "v1GetUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetViolationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "query_id": {
          "type": "string"
        },
        "query_name": {
          "type": "string"
        },
        "entity_type": {
          "type": "string"
        },
        "entity_id": {
          "type": "string"
        },
        "entity_name": {
          "type": "string"
        },
        "suppressed": {
          "type": "boolean"
        },
        "occurred_at": {
          "type": "string",
          "format": "date-time"
        },
        "suppressed_at": {
          "type": "string",
          "format": "date-time"
        },
        "recipe_available": {
          "type": "boolean"
        },
        "recipe_id": {
          "type": "string"
        }
      }
    },
    "v1GetWebhookResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "webhook_url": {
          "type": "string"
        },
        "webhook_auth_token": {
          "type": "string"
        },
        "all_assessment_rules": {
          "type": "boolean"
        },
        "assessment_rule_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "all_assessment_violations": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "webhook_type": {
          "$ref": "#/definitions/v1WebhookType"
        }
      }
    },
    "v1GraphLevel": {
      "type": "string",
      "enum": [
        "RAW",
        "EFFECTIVE"
      ],
      "default": "RAW"
    },
    "v1GraphPingResponse": {
      "type": "object"
    },
    "v1ListAccessWorkflowCertificationResponse": {
      "type": "object",
      "properties": {
        "certifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AccessWorkflowCertification"
          }
        }
      }
    },
    "v1ListAccessWorkflowResponse": {
      "type": "object",
      "properties": {
        "workflows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetAccessWorkflowResponse"
          }
        }
      }
    },
    "v1ListAssessmentAlertsResponse": {
      "type": "object",
      "properties": {
        "alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetAssessmentAlertResponse"
          }
        }
      }
    },
    "v1ListAssessmentQueriesResponse": {
      "type": "object",
      "properties": {
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetAssessmentQueryResponse"
          }
        }
      }
    },
    "v1ListAssessmentQueryVariableResponse": {
      "type": "object",
      "properties": {
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetAssessmentQueryVariableResponse"
          }
        }
      }
    },
    "v1ListAssessmentReportsResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AssessmentReport"
          }
        }
      }
    },
    "v1ListAssessmentRuleAlertsResponse": {
      "type": "object",
      "properties": {
        "alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetAssessmentAlertResponse"
          }
        }
      }
    },
    "v1ListAssessmentRulesResponse": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetAssessmentRuleResponse"
          }
        }
      }
    },
    "v1ListAssessmentViolationRulesResponse": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetAssessmentRuleResponse"
          }
        }
      }
    },
    "v1ListAuditEntriesResponse": {
      "type": "object",
      "properties": {
        "audit_entry": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AuditEntry"
          }
        },
        "response_metadata": {
          "$ref": "#/definitions/v1ResponseMetadata"
        }
      }
    },
    "v1ListAwsProvidersResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_protosv1AwsProvider"
          }
        }
      }
    },
    "v1ListAzureProvidersResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_protosv1AzureProvider"
          }
        }
      }
    },
    "v1ListCookieEventsResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "type": "string"
        },
        "total_size": {
          "type": "integer",
          "format": "int32"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CookieEventResponse"
          }
        }
      }
    },
    "v1ListCustomProviderTemplatesDeprecatedResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CustomProviderTemplateDeprecated"
          }
        }
      }
    },
    "v1ListCustomProviderTemplatesResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CustomProviderTemplate"
          }
        }
      }
    },
    "v1ListCustomProvidersDataSourcesDeprecatedResponse": {
      "type": "object",
      "properties": {
        "datasources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetDataSourceDeprecatedResponse"
          }
        }
      }
    },
    "v1ListCustomProvidersDataSourcesResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DataSource"
          }
        }
      }
    },
    "v1ListCustomProvidersDeprecatedResponse": {
      "type": "object",
      "properties": {
        "custom_providers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetCustomProviderDeprecatedResponse"
          }
        }
      }
    },
    "v1ListCustomProvidersResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CustomProvider"
          }
        }
      }
    },
    "v1ListDataPlanesResponse": {
      "type": "object",
      "properties": {
        "data_planes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetDataPlaneResponse"
          }
        }
      }
    },
    "v1ListDataSourcesDeprecatedResponse": {
      "type": "object",
      "properties": {
        "datasources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetDataSourceDeprecatedResponse"
          }
        }
      }
    },
    "v1ListDataSourcesResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DataSource"
          }
        }
      }
    },
    "v1ListEmailsResponse": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetEmailResponse"
          }
        }
      }
    },
    "v1ListInitItemsSystemResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetInitItemSystemResponse"
          }
        }
      }
    },
    "v1ListNotificationsResponse": {
      "type": "object",
      "properties": {
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1NotificationSimple"
          }
        }
      }
    },
    "v1ListOktaProvidersResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_protosv1OktaProvider"
          }
        }
      }
    },
    "v1ListOneloginProvidersResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_protosv1OneloginProvider"
          }
        }
      }
    },
    "v1ListPGSubgraphQueryResponse": {
      "type": "object",
      "properties": {
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetPGSubgraphQueryResponse"
          }
        }
      }
    },
    "v1ListQueryByVariableResponse": {
      "type": "object",
      "properties": {
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetAssessmentQueryResponse"
          }
        }
      }
    },
    "v1ListQueryVariablesResponse": {
      "type": "object",
      "properties": {
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetAssessmentQueryVariableResponse"
          }
        }
      }
    },
    "v1ListRecipesResponse": {
      "type": "object",
      "properties": {
        "recipes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Recipe"
          }
        }
      }
    },
    "v1ListRoleResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetRoleResponse"
          }
        }
      }
    },
    "v1ListSnowflakeProvidersResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_protosv1SnowflakeProvider"
          }
        }
      }
    },
    "v1ListTrinoProvidersResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_protosv1TrinoProvider"
          }
        }
      }
    },
    "v1ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetUserResponse"
          }
        }
      }
    },
    "v1ListViolationsResponse": {
      "type": "object",
      "properties": {
        "violations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetViolationResponse"
          }
        }
      }
    },
    "v1ListWebhooksResponse": {
      "type": "object",
      "properties": {
        "webhooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GetWebhookResponse"
          }
        }
      }
    },
    "v1MarkRecipeAsExecutedRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1MarkRecipeAsExecutedResponse": {
      "type": "object",
      "properties": {
        "recipe": {
          "$ref": "#/definitions/v1Recipe"
        }
      }
    },
    "v1NeighborEffectSourceToDestPair": {
      "type": "object",
      "properties": {
        "source_node_id": {
          "type": "string"
        },
        "source_node_type": {
          "type": "string"
        },
        "destination_node_type": {
          "type": "string"
        },
        "destination_node_id": {
          "type": "string"
        }
      }
    },
    "v1NeighborTask": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string"
        },
        "available_recipe_with_id": {
          "$ref": "#/definitions/v1AvailableRecipeWithID"
        },
        "description": {
          "type": "string"
        },
        "subtasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PrincipalResourcePermissionChange"
          }
        }
      }
    },
    "v1NeighborTaskStatus": {
      "type": "string",
      "enum": [
        "TASK_PENDING",
        "TASK_RUNNING",
        "TASK_SUCCEED",
        "TASK_FAILED"
      ],
      "default": "TASK_PENDING"
    },
    "v1NodeDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "v1NodeSpecCollection": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeSpecCollectionNodeSpec"
          }
        },
        "nodes_operator": {
          "$ref": "#/definitions/v1AssessmentsBooleanOperator"
        }
      }
    },
    "v1NotificationResult": {
      "type": "object",
      "properties": {
        "notification_id": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "notification_sent_at": {
          "type": "string",
          "format": "date-time"
        },
        "notification_sent_succeed": {
          "type": "boolean"
        },
        "notification_sent_fail_message": {
          "type": "string"
        }
      }
    },
    "v1NotificationSimple": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1NotificationType"
        },
        "destination": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1NotificationType": {
      "type": "string",
      "enum": [
        "WEBHOOK",
        "EMAIL"
      ],
      "default": "WEBHOOK"
    },
    "v1PermissionNameCollection": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operator": {
          "$ref": "#/definitions/v1AssessmentsBooleanOperator"
        }
      }
    },
    "v1Permissions": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "non_data_privilege": {
          "type": "boolean"
        },
        "data_read_privilege": {
          "type": "boolean"
        },
        "data_write_privilege": {
          "type": "boolean"
        },
        "data_delete_privilege": {
          "type": "boolean"
        },
        "data_create_privilege": {
          "type": "boolean"
        },
        "metadata_read_privilege": {
          "type": "boolean"
        },
        "metadata_write_privilege": {
          "type": "boolean"
        },
        "metadata_create_privilege": {
          "type": "boolean"
        },
        "metadata_delete_privilege": {
          "type": "boolean"
        }
      }
    },
    "v1PrincipalResourcePermissionChange": {
      "type": "object",
      "properties": {
        "subtask_id": {
          "type": "string"
        },
        "source_to_destination": {
          "$ref": "#/definitions/v1NeighborEffectSourceToDestPair"
        },
        "resource_permission": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ResourcePermissionChange"
          }
        },
        "started_at": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/v1NeighborTaskStatus"
        },
        "percentage": {
          "type": "integer",
          "format": "int32"
        },
        "last_status_message": {
          "type": "string"
        },
        "finished_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1Provider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "vendor_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1ProviderType"
        },
        "state": {
          "$ref": "#/definitions/v1ProviderState"
        },
        "data_plane_id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ProviderStatus"
        }
      }
    },
    "v1ProviderState": {
      "type": "string",
      "enum": [
        "ENABLED",
        "DISABLED",
        "DELETING"
      ],
      "default": "ENABLED"
    },
    "v1ProviderStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "SUCCESS",
        "ERROR",
        "UNAUTHENTICATED"
      ],
      "default": "PENDING"
    },
    "v1ProviderType": {
      "type": "string",
      "enum": [
        "UNKNOWN_PROVIDER",
        "CUSTOM",
        "AWS",
        "AZURE",
        "OKTA",
        "ONE_LOGIN",
        "SNOWFLAKE",
        "TRINO"
      ],
      "default": "UNKNOWN_PROVIDER"
    },
    "v1PushCustomProviderDatasourceDeprecatedRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "data_source_id": {
          "type": "string"
        },
        "json_data": {
          "type": "string"
        }
      }
    },
    "v1PushCustomProviderDatasourceDeprecatedResponse": {
      "type": "object"
    },
    "v1PushCustomProviderDatasourceRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "data_source_id": {
          "type": "string"
        },
        "json_data": {
          "type": "string"
        }
      }
    },
    "v1PushCustomProviderDatasourceResponse": {
      "type": "object"
    },
    "v1Recipe": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/v1RecipeState"
        },
        "category": {
          "$ref": "#/definitions/v1RecipeCategory"
        },
        "violation_info": {
          "$ref": "#/definitions/v1RecipeViolationInfo"
        },
        "started_at": {
          "type": "string",
          "format": "date-time"
        },
        "executed_at": {
          "type": "string",
          "format": "date-time"
        },
        "instruction_type": {
          "$ref": "#/definitions/v1RecipeInstructionType"
        },
        "option": {
          "$ref": "#/definitions/v1RecipeOption"
        },
        "available_recipe_with_id": {
          "$ref": "#/definitions/v1AvailableRecipeWithID"
        },
        "verified_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1RecipeCategory": {
      "type": "string",
      "enum": [
        "RECIPE_CATEGORY_UNDEFINED",
        "RECIPE_CATEGORY_VIOLATION",
        "RECIPE_CATEGORY_REMOVE_RELATIONSHIP"
      ],
      "default": "RECIPE_CATEGORY_UNDEFINED"
    },
    "v1RecipeInstructionType": {
      "type": "string",
      "enum": [
        "RECIPE_INSTRUCTION_TYPE_UNDEFINED",
        "MANUAL"
      ],
      "default": "RECIPE_INSTRUCTION_TYPE_UNDEFINED"
    },
    "v1RecipeInstructions": {
      "type": "object",
      "properties": {
        "instruction_type": {
          "$ref": "#/definitions/v1RecipeInstructionType"
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Instructions for how to execute a"
    },
    "v1RecipeOption": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "instructions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RecipeInstructions"
          }
        },
        "side_effects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RecipeSideEffect"
          }
        }
      }
    },
    "v1RecipeSideEffect": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      },
      "title": "Side Effect that will happen if you choose a certain option for a recipe"
    },
    "v1RecipeState": {
      "type": "string",
      "enum": [
        "RECIPE_STATE_UNDEFINED",
        "DEFINING",
        "IN_PROGRESS",
        "EXECUTED",
        "VERIFIED"
      ],
      "default": "RECIPE_STATE_UNDEFINED"
    },
    "v1RecipeViolationInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "query_id": {
          "type": "string"
        },
        "query_name": {
          "type": "string"
        },
        "entity_type": {
          "type": "string"
        },
        "entity_id": {
          "type": "string"
        },
        "entity_name": {
          "type": "string"
        }
      },
      "title": "When the recipe is a violation, information about that violation to show in the UI"
    },
    "v1RefreshSessionRequest": {
      "type": "object",
      "properties": {
        "grant_type": {
          "type": "string"
        },
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "v1RefreshSessionResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "token_type": {
          "type": "string"
        },
        "expires_in_sec": {
          "type": "integer",
          "format": "int64"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "v1RemoveRuleNotificationRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "notification_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1RemoveRuleNotificationResponse": {
      "type": "object"
    },
    "v1RemoveTagRequest": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string"
        },
        "tag_key": {
          "type": "string"
        }
      }
    },
    "v1RemoveTagResponse": {
      "type": "object"
    },
    "v1ResourcePermissionChange": {
      "type": "object",
      "properties": {
        "resource_node_id": {
          "type": "string"
        },
        "resource_type": {
          "type": "string"
        },
        "resource_name": {
          "type": "string"
        },
        "lost_resource_permissions": {
          "$ref": "#/definitions/v1Permissions"
        },
        "current_resource_permissions": {
          "$ref": "#/definitions/v1Permissions"
        },
        "gained_resource_permissions": {
          "$ref": "#/definitions/v1Permissions"
        }
      }
    },
    "v1ResponseMetadata": {
      "type": "object",
      "properties": {
        "next_cursor": {
          "type": "string"
        }
      }
    },
    "v1RetrySendNotificationResponse": {
      "type": "object"
    },
    "v1SamlConnectionData": {
      "type": "object",
      "properties": {
        "sign_in_endpoint_url": {
          "type": "string"
        },
        "sign_out_endpoint_url": {
          "type": "string"
        },
        "sign_saml_request": {
          "type": "boolean"
        },
        "request_protocol_binding": {
          "type": "string"
        },
        "signature_algorithm": {
          "type": "string"
        },
        "digest_algorithm": {
          "type": "string"
        },
        "signing_certificate": {
          "type": "string"
        },
        "logo_url": {
          "type": "string"
        },
        "idp_initiated": {
          "type": "boolean"
        }
      }
    },
    "v1SaveCookieEventRequestError": {
      "type": "object",
      "properties": {
        "request_id": {
          "type": "string"
        },
        "reason": {
          "$ref": "#/definitions/v1ErrorReason"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1SaveCookieEventResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1SaveEmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "setting": {
          "$ref": "#/definitions/v1GeneralNotificationSetting"
        }
      }
    },
    "v1SaveEmailResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1SaveWebhookRequest": {
      "type": "object",
      "properties": {
        "webhook_url": {
          "type": "string"
        },
        "webhook_auth_token": {
          "type": "string"
        },
        "all_assessment_rules": {
          "type": "boolean"
        },
        "assessment_rule_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "all_assessment_violations": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "webhook_type": {
          "$ref": "#/definitions/v1WebhookType"
        }
      }
    },
    "v1SaveWebhookResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1SendTestNotificationResponse": {
      "type": "object"
    },
    "v1SetViolationAssessmentQueryResponse": {
      "type": "object"
    },
    "v1Severity": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "INFO",
        "WARNING",
        "ERROR"
      ],
      "default": "UNKNOWN"
    },
    "v1StartNeighborEffectTaskRequest": {
      "type": "object",
      "properties": {
        "available_recipe_with_id": {
          "$ref": "#/definitions/v1AvailableRecipeWithID"
        },
        "filter": {
          "$ref": "#/definitions/v1NeighborEffectSourceToDestPair"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1SubGraphRequest": {
      "type": "object",
      "properties": {
        "node_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubGraphRequestNodeType"
          },
          "description": "Node types that will be part of a connected subgraph.\nAll node types must have a connectivity to other node types\nto be part of a subgraph."
        },
        "collapse": {
          "type": "boolean"
        },
        "keep_layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemaGroup"
          }
        },
        "do_not_collapse_non_customer_facing_nodes": {
          "type": "boolean"
        },
        "graph_level": {
          "$ref": "#/definitions/v1GraphLevel"
        },
        "property_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sort_pre_collapse_layers": {
          "type": "boolean",
          "title": "Sort the output pre-collapse layers list for consistent ordering"
        },
        "snapshot_id": {
          "type": "string",
          "format": "uint64"
        },
        "paginate": {
          "type": "boolean",
          "title": "Requestor can understand pagination.  If this value is false and an internal limit is reached, the request will be failed"
        },
        "limit_node_count": {
          "type": "string",
          "format": "uint64",
          "title": "Limit the number of nodes returned"
        },
        "limit_time_ms": {
          "type": "string",
          "format": "uint64",
          "title": "Limit the amount of time the backend will spend searching data"
        },
        "pagination_context": {
          "type": "string",
          "title": "Used to paginate results.  Specify as empty on first request.  On subsequent requests, pass the context from the response along with a direction"
        },
        "paginate_direction_backwards": {
          "type": "boolean",
          "title": "Determines which direction to paginate"
        },
        "limit_start_node_count": {
          "type": "string",
          "format": "uint64",
          "title": "Limit the number of start nodes returned"
        }
      }
    },
    "v1SubGraphRequestCondition": {
      "type": "object",
      "properties": {
        "fn": {
          "type": "string",
          "title": "supported values: EQ, LT, LTE, GT, GTE, LIST_CONTAINS, IN, STARTS_WITH, CONTAINS, ENDS_WITH, EXISTS"
        },
        "property": {
          "type": "string"
        },
        "string_value": {
          "type": "string"
        },
        "number_value": {
          "type": "string",
          "format": "int64"
        },
        "bool_value": {
          "type": "boolean"
        },
        "timestamp_value": {
          "type": "string",
          "format": "date-time",
          "title": "timestamp in format: yyyy-MM-dd'T'HH:mm:ss.SSSSSS'Z', example: 2020-07-28T10:21:21.193660Z"
        },
        "string_list_value": {
          "$ref": "#/definitions/GraphStringListProperty"
        },
        "not": {
          "type": "boolean"
        }
      }
    },
    "v1SuppressViolationResponse": {
      "type": "object"
    },
    "v1TestEmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "v1TestEmailResponse": {
      "type": "object"
    },
    "v1TestWebhookRequest": {
      "type": "object",
      "properties": {
        "webhook_url": {
          "type": "string"
        },
        "webhook_auth_token": {
          "type": "string"
        },
        "webhook_type": {
          "$ref": "#/definitions/v1WebhookType"
        }
      }
    },
    "v1TestWebhookResponse": {
      "type": "object"
    },
    "v1TrinoS3ObjectConfig": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string"
        },
        "secret_key": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "credentials_type": {
          "$ref": "#/definitions/v1AwsCredentialsType"
        },
        "assume_role_name": {
          "type": "string"
        },
        "assume_role_external_id": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        }
      }
    },
    "v1TrinoS3ObjectConfigResponse": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "credentials_type": {
          "$ref": "#/definitions/v1AwsCredentialsType"
        },
        "assume_role_name": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        }
      }
    },
    "v1UnsetViolationAssessmentQueryResponse": {
      "type": "object"
    },
    "v1UnsuppressViolationResponse": {
      "type": "object"
    },
    "v1UpdateAssessmentQueryRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "query_type": {
          "$ref": "#/definitions/v1AssessmentQueryType"
        },
        "permission_names": {
          "$ref": "#/definitions/v1PermissionNameCollection"
        },
        "canonical_permissions": {
          "$ref": "#/definitions/v1CanonicalPermissionCollection"
        },
        "variables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "required_intermediate_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "avoids_intermediate_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "destination_node_types": {
          "$ref": "#/definitions/v1NodeSpecCollection"
        },
        "no_relation": {
          "type": "boolean"
        }
      }
    },
    "v1UpdateAssessmentQueryResponse": {
      "type": "object"
    },
    "v1UpdateAssessmentQueryVariableRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1UpdateAssessmentQueryVariableResponse": {
      "type": "object"
    },
    "v1UpdateAssessmentReportRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AssessmentReportQueryEntry"
          }
        },
        "customized_variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CreateAssessmentQueryVariableRequest"
          }
        },
        "category": {
          "type": "string"
        }
      }
    },
    "v1UpdateAssessmentReportResponse": {
      "type": "object"
    },
    "v1UpdateAssessmentRuleEvaluationStatusResponse": {
      "type": "object"
    },
    "v1UpdateAssessmentRuleRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "condition": {
          "$ref": "#/definitions/v1FnExpression"
        },
        "severity": {
          "type": "string"
        }
      }
    },
    "v1UpdateAssessmentRuleResponse": {
      "type": "object"
    },
    "v1UpdateAwsProviderRequestAwsProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "credentials_type": {
          "$ref": "#/definitions/v1AwsCredentialsType"
        },
        "access_key_id": {
          "type": "string"
        },
        "secret_key": {
          "type": "string"
        },
        "assume_role_name": {
          "type": "string"
        },
        "assume_role_external_id": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "db_user": {
          "type": "string"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AwsServiceType"
          }
        },
        "data_plane_id": {
          "type": "string"
        }
      }
    },
    "v1UpdateAwsProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1AwsProvider"
        }
      }
    },
    "v1UpdateAzureProviderRequestAzureProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tenant_id": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "auth_certificate": {
          "type": "string"
        },
        "auth_certificate_password": {
          "type": "string"
        }
      }
    },
    "v1UpdateAzureProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1AzureProvider"
        }
      }
    },
    "v1UpdateDataSourceRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1UpdateDataSourceResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v1DataSource"
        }
      }
    },
    "v1UpdateEmailRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "setting": {
          "$ref": "#/definitions/v1GeneralNotificationSetting"
        }
      }
    },
    "v1UpdateEmailResponse": {
      "type": "object"
    },
    "v1UpdateInitItemSystemRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "v1UpdateInitItemSystemResponse": {
      "type": "object"
    },
    "v1UpdateOktaProviderRequestOktaProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "v1UpdateOktaProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1OktaProvider"
        }
      }
    },
    "v1UpdateOneloginProviderRequestOneloginProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        }
      }
    },
    "v1UpdateOneloginProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1OneloginProvider"
        }
      }
    },
    "v1UpdatePasswordForSelfRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "v1UpdatePasswordForSelfResponse": {
      "type": "object"
    },
    "v1UpdateRecipeRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "option_id": {
          "type": "string"
        }
      }
    },
    "v1UpdateRecipeResponse": {
      "type": "object",
      "properties": {
        "recipe": {
          "$ref": "#/definitions/v1Recipe"
        }
      }
    },
    "v1UpdateSamlConnectionRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "connection_data": {
          "$ref": "#/definitions/v1SamlConnectionData"
        }
      }
    },
    "v1UpdateSamlConnectionResponse": {
      "type": "object"
    },
    "v1UpdateSnowflakeProviderRequestSnowflakeProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "account_locator": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "cloud": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "warehouse": {
          "type": "string"
        }
      }
    },
    "v1UpdateSnowflakeProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1SnowflakeProvider"
        }
      }
    },
    "v1UpdateTrinoProviderRequestTrinoProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "aws_s3_object_config": {
          "$ref": "#/definitions/v1TrinoS3ObjectConfig"
        },
        "ssl_certificate": {
          "type": "string"
        }
      }
    },
    "v1UpdateTrinoProviderResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/api_protosv1TrinoProvider"
        }
      }
    },
    "v1UpdateUserPasswordRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1UpdateUserPasswordResponse": {
      "type": "object"
    },
    "v1UpdateUserRolesRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1UpdateUserRolesResponse": {
      "type": "object"
    },
    "v1UpdateWebhookRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "webhook_url": {
          "type": "string"
        },
        "webhook_auth_token": {
          "type": "string"
        },
        "all_assessment_rules": {
          "type": "boolean"
        },
        "assessment_rule_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "all_assessment_violations": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "webhook_type": {
          "$ref": "#/definitions/v1WebhookType"
        }
      }
    },
    "v1UpdateWebhookResponse": {
      "type": "object"
    },
    "v1UpgradeDataPlaneRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1UpgradeDataPlaneResponse": {
      "type": "object"
    },
    "v1UserInitSystemRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1UserInitSystemResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1WebhookType": {
      "type": "string",
      "enum": [
        "GENERIC",
        "SLACK"
      ],
      "default": "GENERIC"
    },
    "v1WorkflowEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    }
  }
}
